Socket Programming - Day 3

  ~Outcomes
    Identify Socket Types for Network Functions
    Discuss Network Programming with Python3
    Demonstrate Stream Socket Programming
    Demonstrate Datagram Socket Programming
    Demonstrate RAW Socket with Python3
    Demonstrate RAW TCP Socket with Python3

  ~Socket Types
  User Space
    Stream Sockets - Connection oriented and sequenced; methods for connection establishment and tear-down. Used with TCP, SCTP, and Bluetooth.
    Datagram Sockets - Connectionless; designed for quickly sending and receiving data. Used with UDP.
  Kernel Space
    RAW Sockets - Direct sending and receiving of IP packets without automatic protocol-specific formatting.

  ~Socket Creation
    User Space Sockets - The most common sockets that do not require elevated privileges to perform actions on behalf of user applications.
    Kernel Space Sockets - Attempts to access hardware directly on behalf of a user application to either prevent encapsulation/decapsulation 
    or to create packets from scratch, which requires elevated privileges.

  ~RAW IPv4 Sockets
    RAW Socket scripts must include the IP header and the next headers.
    Requires guidance from the "Request for Comments" (RFC) to follow header structure properly.
    RFCs contain technical and organizational documents about the Internet, including specifications and policy documents.
    See RFC 791, Section 3 - Specification for details on how to construct an IPv4 header.

  ~Raw Socket use case
    Testing specific defense mechanisms - such as triggering and IDS for an effect, or filtering
    Avoiding defense mechanisms
    Obfuscating data during transfer
    Manually crafting a packet with the chosen data in header fields

  ~Encoding/Decoding
    Encoding
      The process of taking bits and converting them using a specified cipher.
    Decoding
      Reverse of the conversion process used by the specified cipher for encoding
      Common encoding schemes
      UTF-8, Base64, Hex

  ~Encoding vs Encryptions
    Encoding - converts data into a different format
    Encryption - scrambles data to make it unreadable without a secret key
    
